#!/usr/bin/perl

%state_number_map = (
	"01" => "AL", "02" => "AK", "04" => "AZ", "05" => "AR", "06" => "CA",
	"08" => "CO", "09" => "CT", "10" => "DE", "11" => "DC", "12" => "FL",
	"13" => "GA", "15" => "HI", "16" => "ID", "17" => "IL", "18" => "IN",
	"19" => "IA", "20" => "KS", "21" => "KY", "22" => "LA", "23" => "ME",
	"24" => "MD", "25" => "MA", "26" => "MI", "27" => "MN", "28" => "MS",
	"29" => "MO", "30" => "MT", "31" => "NE", "32" => "NV", "33" => "NH",
	"34" => "NJ", "35" => "NM", "36" => "NY", "37" => "NC", "38" => "ND",
	"39" => "OH", "40" => "OK", "41" => "OR", "42" => "PA", "44" => "RI",
	"45" => "SC", "46" => "SD", "47" => "TN", "48" => "TX", "49" => "UT",
	"50" => "VT", "51" => "VA", "53" => "WA", "54" => "WV", "55" => "WI",
	"56" => "WY", "60" => "AS", "66" => "GU", "69" => "MP", "72" => "PR",
	"78" => "VI",
);

if ($#ARGV >= 0) {
	@counties = @ARGV;
} else {
	@counties = (
		"18011", # Boone
		"18057", # Hamilton
		"18023", # Clinton
		"18159", # Tipton
	);
}

for $county (@counties) {
	print STDERR "county $county\n";

	%old = ();
	%new = ();

	%lats = ();
	%lons = ();


	$state = substr($county, 0, 2);
	$statename = $state_number_map{$state};


	open(IN, "java shpcat /data/data/tiger/2013/www2.census.gov/geo/tiger/TIGER2013/ROADS/tl_2013_${county}_roads.zip |");
	while (<IN>) {
		chomp;

                ($tlid, $fullname, $rttyp, $mtfcc) = split(/\|/);
		next unless ($mtfcc =~ /^S/); #  || $mtfcc =~ /R/); # roads, railroads

		next unless /polyline/;
		s/.*polyline //;
		$tlid =~ s/^ *//;
		$tlid =~ s/ *$//;

		@points = split(/ /, $_);

		$fullname =~ s/ *$//;
		$fullname =~ s/ +/ /g;

		for ($i = 0; $i < $#points; $i++) {
			($lon1, $lat1) = split(/,/, $points[$i]);
			($lon2, $lat2) = split(/,/, $points[$i + 1]);

			$lat1 = sprintf("%.5f", $lat1);
			$lon1 = sprintf("%.5f", $lon1);
			$lat2 = sprintf("%.5f", $lat2);
			$lon2 = sprintf("%.5f", $lon2);

			@p = sort("$lat1,$lon1", "$lat2,$lon2");
			$old{"$p[0] $p[1]"} = 1;
			$tlid{"$p[0] $p[1]"} = $tlid;
			$seg{"$p[0] $p[1]"} = $i;
			$canon{"$p[0] $p[1]"} = "$lat1,$lon1 $lat2,$lon2";
			$fullname{"$p[0] $p[1]"} = $fullname;
		}
	}
	close(IN);

	open(IN, "java shpcat /data/data/tiger/2014/www2.census.gov/geo/tiger/TIGER2014/ROADS/tl_2014_${county}_roads.zip |");
	while (<IN>) {
		chomp;

                ($tlid, $fullname, $rttyp, $mtfcc) = split(/\|/);
		next unless ($mtfcc =~ /^S/); #  || $mtfcc =~ /R/); # roads, railroads

		next unless /polyline/;
		s/.*polyline //;
		$tlid =~ s/^ *//;
		$tlid =~ s/ *$//;

		@points = split(/ /, $_);

		$fullname =~ s/ *$//;
		$fullname =~ s/ +/ /g;

		for ($i = 0; $i < $#points; $i++) {
			($lon1, $lat1) = split(/,/, $points[$i]);
			($lon2, $lat2) = split(/,/, $points[$i + 1]);

			$lat1 = sprintf("%.5f", $lat1);
			$lon1 = sprintf("%.5f", $lon1);
			$lat2 = sprintf("%.5f", $lat2);
			$lon2 = sprintf("%.5f", $lon2);

			@p = sort("$lat1,$lon1", "$lat2,$lon2");
			$new{"$p[0] $p[1]"} = 1;
			$tlid{"$p[0] $p[1]"} = $tlid;
			$seg{"$p[0] $p[1]"} = $i;
			$canon{"$p[0] $p[1]"} = "$lat1,$lon1 $lat2,$lon2";
			$fullname{"$p[0] $p[1]"} = $fullname;
		}
	}
	close(IN);

	for $n (keys(%new)) {
		if ($old{$n}) {
			$out .= "$canon{$n} 4:2 // $tlid{$n} $seg{$n} $fullname{$n}\n";
		} else {
			$out .= "$canon{$n} 4:11 // $tlid{$n} $seg{$n} $fullname{$n}\n";
		}
	}
}

print $out;
